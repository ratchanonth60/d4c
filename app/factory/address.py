import factory
from factory.alchemy import SQLAlchemyModelFactory

from app.models.address import Address, Tile

from .user import UserFactory


class AddressFactory(SQLAlchemyModelFactory):
    class Meta:
        model = Address
        sqlalchemy_session_persistence = (
            "commit"  # Ensures objects are committed to the database
        )

    id = factory.Sequence(lambda n: n + 1)
    title = factory.Iterator([Tile.MR, Tile.MRS])  # Randomly select title
    first_name = factory.Faker("first_name")
    last_name = factory.Faker("last_name")
    phone_number = factory.Faker("phone_number")
    address_line1 = factory.Faker("address")
    address_line2 = factory.Faker("address")
    city = factory.Faker("city")
    state = factory.Faker("state_abbr")
    postal_code = factory.Faker("postcode")
    country = factory.Faker("country")

    # Assuming the Address belongs to a user, you can link it to a User instance using UserFactory
    user = factory.SubFactory(
        UserFactory
    )  # This links the address to a user generated by UserFactory
    user_id = factory.LazyAttribute(
        lambda o: o.user.id
    )  # Ensures correct user_id is set
